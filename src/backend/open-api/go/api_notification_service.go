/*
 * Swagger - OpenAPI 3.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Contact: nikita@ttnr.me
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	database_notification "template_backend/database/paths/notification"
	openapi_common "template_backend/open-api/common"
)

// NotificationAPIService is a service that implements the logic for the NotificationAPIServicer
// This service should implement the business logic for every endpoint for the NotificationAPI API.
// Include any external packages or services that will be required by this service.
type NotificationAPIService struct {
}

// NewNotificationAPIService creates a default api service
func NewNotificationAPIService() NotificationAPIServicer {
	return &NotificationAPIService{}
}

// DeviceConsumeNotificationsGet - Get device notifications
func (s *NotificationAPIService) DeviceConsumeNotificationsGet(ctx context.Context, w http.ResponseWriter, r *http.Request) (ImplResponse, error) {
	device, err := openapi_common.IsDeviceAuthorized(ctx, r)
	if err != nil {
		return Response(401, Error{ErrorMessages: []Message{{Code: "100", Message: "Unauthorized. Please check your credentials."}}}), nil
	}

	notifications := database_notification.FindNotificationsByDeviceId(ctx, device.ID, 1000)
	for _, notification := range notifications {
		database_notification.DeleteNotification(ctx, notification.ID)
	}

	return Response(200, notifications), nil
}
